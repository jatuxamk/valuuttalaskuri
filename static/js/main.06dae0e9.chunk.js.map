{"version":3,"sources":["components/Laskuri.js","App.js","index.js"],"names":["useStyles","makeStyles","otsikko","marginTop","marginBottom","fontSize","syote","tulos","Laskuri","props","useState","muunnettavaSumma","setMuunnettavaSumma","kohdevaluutta","setKohdevaluutta","tulosteksti","setTulosteksti","tyylit","TextField","variant","label","fullWidth","className","onChange","e","target","value","FormControl","Select","displayEmpty","Object","keys","valuutat","sort","map","valuutta","MenuItem","Button","color","size","onClick","isNaN","toFixed","Typography","App","valuuttakurssit","virhe","tiedotHaettu","data","setData","haeTiedot","a","fetch","yhteys","json","tiedot","rates","useEffect","Container","Backdrop","open","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"gSAGMA,EAAYC,YAAW,CACzBC,QAAU,CACNC,UAAY,GACZC,aAAe,GACfC,SAAW,IAEfC,MAAQ,CACJF,aAAe,IAEnBG,MAAQ,CACJJ,UAAY,MA4ELK,MAvEf,SAAiBC,GAAQ,IAAD,EAE4BC,qBAF5B,mBAEbC,EAFa,KAEKC,EAFL,OAGsBF,mBAAS,OAH/B,mBAGbG,EAHa,KAGEC,EAHF,OAKkBJ,mBAAS,IAL3B,mBAKbK,EALa,KAKAC,EALA,KAOdC,EAASjB,IAmBf,OACQ,qCAEI,cAACkB,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAM,gCACNC,WAAS,EACTC,UAAWL,EAAOX,MAClBiB,SAAU,SAACC,GAAQZ,EAAoBY,EAAEC,OAAOC,UAGpD,cAACC,EAAA,EAAD,CACIR,QAAQ,WACRE,WAAS,EACTC,UAAWL,EAAOX,MAHtB,SAMI,cAACsB,EAAA,EAAD,CACIF,MAAOb,EACPgB,cAAY,EACZN,SAAW,SAACC,GAAQV,EAAiBU,EAAEC,OAAOC,QAHlD,SAKKI,OAAOC,KAAKtB,EAAMuB,UAAUC,OAAOC,KAAI,SAACC,GACrC,OAAO,eAACC,EAAA,EAAD,CAAUV,MAAOS,EAAjB,UAA4BA,EAA5B,KAAwC1B,EAAMuB,SAASG,GAAvD,cAKnB,cAACE,EAAA,EAAD,CACIlB,QAAQ,YACRmB,MAAM,UACNjB,WAAS,EACTkB,KAAK,QACLC,QAlDK,WAEjB,GAAIC,MAAM9B,GAENK,EAAe,iDAEZ,CAEH,IAAIT,EAAQI,EAAmBF,EAAMuB,SAASnB,GAE9CG,EAAe,GAAD,OAAIL,EAAJ,kBAA8BJ,EAAMmC,QAAQ,GAA5C,YAAkD7B,MAmC5D,2BAUA,cAAC8B,EAAA,EAAD,CAAYrB,UAAWL,EAAOV,MAA9B,SAAsCQ,QCnBvC6B,MA3Df,WAAgB,IAAD,EAEWlC,mBAAS,CACGmC,gBAAkB,GAClBC,MAAQ,GACRC,cAAe,IALtC,mBAENC,EAFM,KAEAC,EAFA,KASPC,EAAS,uCAAG,8BAAAC,EAAA,+EAIOC,MAAM,sCAJb,cAIRC,EAJQ,gBAKOA,EAAOC,OALd,OAKRC,EALQ,OAOdN,EAAQ,2BACKD,GADN,IAEGH,gBAAkBU,EAAOC,MACzBT,cAAe,KAVX,kDAedE,EAAQ,2BACKD,GADN,IAEGF,MAAQ,kEACRC,cAAe,KAlBX,0DAAH,qDAgCf,OAPAU,qBAAU,WAERP,MAGC,IAGD,eAACQ,EAAA,EAAD,WAEE,cAACf,EAAA,EAAD,CAAYxB,QAAQ,KAApB,6BAEE6B,EAAKF,MACL,cAACH,EAAA,EAAD,CAAYL,MAAM,QAAlB,SAA2BU,EAAKF,QAC/BE,EAAKD,aACJ,cAAC,EAAD,CAASf,SAAUgB,EAAKH,kBACxB,cAACc,EAAA,EAAD,CAAUC,MAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAkBvB,MAAM,kB,MClDpCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.06dae0e9.chunk.js","sourcesContent":["import { Button, FormControl, makeStyles, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    otsikko : {\r\n        marginTop : 10,\r\n        marginBottom : 20,\r\n        fontSize : 18\r\n    },\r\n    syote : {\r\n        marginBottom : 10\r\n    },\r\n    tulos : {\r\n        marginTop : 10\r\n    }\r\n\r\n});\r\n\r\nfunction Laskuri(props) {\r\n\r\n    const [muunnettavaSumma, setMuunnettavaSumma] = useState();\r\n    const [kohdevaluutta, setKohdevaluutta] = useState(\"USD\")\r\n\r\n    const [tulosteksti, setTulosteksti] = useState(\"\");\r\n\r\n    const tyylit = useStyles();\r\n\r\n    const laskeMuunnos = () => {\r\n\r\n        if (isNaN(muunnettavaSumma)) {\r\n\r\n            setTulosteksti(\"Syötä ainoastaan numeroita, kiitos.\")\r\n\r\n        } else {\r\n\r\n            let tulos = muunnettavaSumma * props.valuutat[kohdevaluutta];\r\n\r\n            setTulosteksti(`${muunnettavaSumma} EUR = ${tulos.toFixed(2)} ${kohdevaluutta}`);\r\n\r\n        }\r\n\r\n\r\n    }    \r\n\r\n    return (\r\n            <>\r\n\r\n                <TextField \r\n                    variant=\"outlined\"\r\n                    label=\"Anna muunnettava summa (euro)\"\r\n                    fullWidth\r\n                    className={tyylit.syote}\r\n                    onChange={(e) => { setMuunnettavaSumma(e.target.value) }}\r\n                />\r\n\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    className={tyylit.syote}\r\n                >\r\n\r\n                    <Select\r\n                        value={kohdevaluutta}\r\n                        displayEmpty\r\n                        onChange={ (e) => { setKohdevaluutta(e.target.value) } }\r\n                    >\r\n                        {Object.keys(props.valuutat).sort().map((valuutta) => {\r\n                            return <MenuItem value={valuutta}>{valuutta} ({props.valuutat[valuutta]})</MenuItem>                            \r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    onClick={laskeMuunnos}\r\n                >\r\n                    Laske muunnos\r\n                </Button>\r\n\r\n                <Typography className={tyylit.tulos}>{tulosteksti}</Typography>\r\n\r\n            </>\r\n           )\r\n\r\n}\r\n\r\nexport default Laskuri;","import { Backdrop, CircularProgress, Container, Typography} from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport Laskuri from './components/Laskuri';\n\nfunction App() {\n\n  const [data, setData] = useState({\n                                      valuuttakurssit : [],\n                                      virhe : \"\",\n                                      tiedotHaettu : false\n                                    })\n\n\n  const haeTiedot = async () => {\n\n    try {\n\n      const yhteys = await fetch(\"https://api.ratesapi.io/api/latest\");\n      const tiedot = await yhteys.json();    \n  \n      setData({\n                ...data, \n                valuuttakurssit : tiedot.rates,\n                tiedotHaettu : true\n              });\n\n    } catch (e) {\n\n      setData({\n                ...data, \n                virhe : \"Ei yhteyttä palvelimeen. Yritä uudelleen hetken kuluttua.\",\n                tiedotHaettu : true\n              })\n\n    }\n\n  }\n\n  useEffect(() => {\n\n    haeTiedot();\n    \n  // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Container>\n\n      <Typography variant=\"h4\">Valuuttalaskuri</Typography>\n\n      {(data.virhe) \n      ? <Typography color=\"error\">{data.virhe}</Typography>\n      : (data.tiedotHaettu) \n        ? <Laskuri valuutat={data.valuuttakurssit}/>\n        : <Backdrop open={true}>\n            <CircularProgress color=\"inherit\" />  \n          </Backdrop>       \n      } \n\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}